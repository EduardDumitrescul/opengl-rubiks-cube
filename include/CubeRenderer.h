#pragma once
#include "Shader.h"
#include "glm/fwd.hpp"

class CubeRenderer
{
    unsigned int vao;
    unsigned int vbo;

    float vertices[96] = {
         0.5,  0.5, 0.5, 1.0,
        -0.5,  0.5, 0.5, 1.0,
        -0.5, -0.5, 0.5, 1.0,
         0.5, -0.5, 0.5, 1.0,

        0.5,  0.5, -0.5, 1.0,
        0.5,  0.5,  0.5, 1.0,
        0.5, -0.5,  0.5, 1.0,
        0.5, -0.5, -0.5, 1.0,

         0.5, 0.5, -0.5, 1.0,
        -0.5, 0.5, -0.5, 1.0,
        -0.5, 0.5,  0.5, 1.0,
         0.5, 0.5,  0.5, 1.0,

        -0.5,  0.5, -0.5, 1.0,
         0.5,  0.5, -0.5, 1.0,
         0.5, -0.5, -0.5, 1.0,
        -0.5, -0.5, -0.5, 1.0,

         -0.5,  0.5,  0.5, 1.0,
         -0.5,  0.5, -0.5, 1.0,
         -0.5, -0.5, -0.5, 1.0,
         -0.5, -0.5,  0.5, 1.0,

          -0.5, -0.5, -0.5, 1.0,
           0.5, -0.5, -0.5, 1.0,
           0.5, -0.5, 0.5, 1.0,
          -0.5, -0.5, 0.5, 1.0,
    };
public:
    CubeRenderer();

    void render(std::shared_ptr<Shader> shader, glm::vec3 size, glm::vec3 pos) const;
    void cleanup() const;
};
